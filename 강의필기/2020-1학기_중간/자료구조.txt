2020.03.16 1주차
중간,기말 결시 -> 학점 부여 x
프로그래밍 언어는 c 언어로 한정
슈도 코드도 역시 사용한다
중간 + 기말 + 연습문제 4회 비율은 변경될 수 있다
연습 문제는 분할 제출을 할 수 있다

교재: fundamentals of data structures 1~6장 7장 일부 8장
chapter part 1 -> 개념 part 2 -> c 코드 설명 위주

교재 1장 - part 1
c 포인터 복습

2020.03.18 1-2 주차
#알고리즘이란 
어떤 작업을 수행하기위한 일련의 명령
기준
입력과 출력이 존재해야 한다
명령어는 명확해야 한다

선택 정렬을 슈도 코드로 설명
이진 탐색을 설명 : 정렬되어 있는 리스트에서 찾는 값을 탐색
재귀를 설명: 펙토리얼을 예시로 들었음

2020.03.23 2-1주차
#Big oh
O(n): order of n 이라고 읽는다
O(1): order of one 이라고 읽으며 input값과 상관없이 항상 일정한 시간이 걸리는 작업을 지칭하는데 사용한다

단점: constant 요소가 무시되기 때문에 더 나은 결과를 도출하기 힘들 수 있다.
Polynomial time: 다항식으로 알고리즘이 나타나는 알고리즘 -> 현실적으로 사용가능
Exponential time: 지수로 알고리즘이 나타나는 알고리즘 -> n 값이 작을 경우에만 사용가능
Logarithmic time: 로그로 알고리즘이 나타나는 알고리즘 -> 로그n은 n보다 작기 때문에 더 나은 성능을 가지고 있다

2020.03.25 2-2주차
선택 정렬이 실행되는 과정을 통해 big oh 시간 복잡도를 구하는 과정을 함

2020.03.30 3-1주차
선언만 하는 문장은 횟수에 들어가지 않지만 값을 대입하는 것은 횟수에 들어간다

2020.03.30 3-2주차
다항식을 표현하는 방법 계수배열, 항배열

2020.04.06 4-1주차
다항식 덧셈 구현 및 표현채계를 배움

2020.04.13 5-1주차
#sparse matrix
sparse matrix 대칭 시키기
#faster transpos
더 빠르게 sparse matrix 대칭 시키기
#Stack and Queue
스택과 큐에 관한 개념 설명을 함

2020.04.15 5-2주차
스택 구현, 큐 구현

2020.04.20 6-1주차
#선형 큐 구현의 문제점 설명
스택과 큐의 시간 복잡도는 push pop모두 1이다(크기와 무관하다)
큐에서 시프팅을 사용할 경우 시간복잡도가 n이된다
이를 해결하기 위해 rear가 마지막 자리에 올 때 시프팅하는 방법을 생각해 볼 수 있다
이를 결과적으로 해결하는 방식이 서큘러 큐이다


#서큘러 큐
front의 값을 전체 자리값으로 나누는 방식으로 사용한다
full 과 empty를 구분하기 위해서 마지막 자리를 사용하지 않는다
그 외에 flag사용 혹은 변수의 갯수를 따로 카운트하는 방법을 생각해 볼 수 있다

8 path 길 찾기 알고리즘 - 백트래킹 알고리즘
스택을 이용해야 함

2020.04.27 7 -1주차
#postfix expressions
연산자의 순위
postfix a + b => ab+
prefix a + b => +ab
a + b*c => abc*+
(a + b)*c => ab + c*
뒤로 돌아가지 않고 식의 값을 알 수 있다
이를 통해 postfix식의 값을 구하는 알고리즘과 infix와 postfix의 식을 상호 교환하는 알고리즘을 배울 수 있다

2020.04.29 7 -2 주차
#Evaluating postfix expressions 알고리즘
postfix식을 계산하는 알고리즘 설명

2020.05.11 9 - 1주차
#infix -> postfix 식으로 변환하기
1. infix식에 우선순위에 맞게 괄호를 친다
2. 괄호에서 연산자를 숫자뒤로 옮긴다

알고리즘
숫자들은 바로 출력한다
)괄호를 만나면 (를 만날때까지 pop한다 - > 출력은 연산자만 한다
다른 경우: 새로들어온 토큰과 기존에 탑에 있던 토큰의 우선 순위를 비교해서 top 우선순위가 빠르거나 같으면 pop 출력
새로 들어올 연산자의 우선순위가 더 빠르면 스택에 push한다
입력이 끝나면 $와 같은 것이 나올때까지 모두 pop해서 출력한다

(isp)스택안에서와 (icp)밖에서의 우선순위가 다를 수 있다

2020.05.13 9 - 2주차
식변환 알고리즘 코드 설명
linked list 설명

2020.05.18 10 - 1주차
링크드 리스트 응용
linked list 코드 설명
2020.5-05.23 10 - 2주차
링크드 리스트 응용 코드 설명
트리 용어 설명

2020.05.25 11-1주차
이진 트리 설명 -> full binary tree 설명
-> complete binary tree node 가 2의 h-1승 부터 2의 h 승 -1까지
-> skewed binary tree 노드수와 높이가 같다

#array로 이진트리 표현하기
#linked list로 이진트리 표현하기
#traversal
preorder = root - Lsubtree - RsubTree
Inorder = Lsubtree - root - RsubTree
postorder = Rsubtree - Rsubtree - root
levelorder 레벨 순으로 왼쪽부터 오른쪽으로
재귀적 코드로 표현한 인오더 표현 설명
재귀적이지 않게 스택을 사용한 인오더 표현 설명
레벨 오더로 큐를 이용해서 탐색하는 코드 설명

2020.05.27 11-2주차
#Heap
Max tree -> 이진트리 + 자기 자식 노드에 있는 값보다 작으면 안된다
Max heap -> 완전이진트리 + Max tree
Max 우선순위 큐 -> Max heap사용

Heap설명 insert, delete, Heap sort, C코드로 설명
