교재 디지털 논리회로 김종헌 2016년 생능 출판사
강의자료 eclass -> ppt 
과제 : 레포트 4회 
성적 : 출석 10 중간,기말 35 과제 20

책을 안사도 괜찮지만 그럴 경우 추가로 자료검색을 요구

20190904 수
ASCII >2.6 에서 구분

20190909 월

10진수를 2진수로 표현하는데 필요한 비트수는 밑이 2인 로그를 취한 후 올림해서 알아낸다. ex) 13은  [log2^13] = [3.xx] = 4
1b 1B?
1b 는 1비트 1B는 1바이트 1 byte = 8 bits

소수점 이하의 10진수를 2진수로 변환하는 절차
10 진수에 2를 곱한다.
결과값이 1보다 작으면 0을 기록하고 1보다 크면 1을 기록하고 1을 뺀다.

0.1011 = 1x2^-1 + 0x 2^-2 + ---

이러한 계산법 때문에 오차가 발생할 수 있는데 표현하는 비트의 개수가 커질수록 오차가 작아지며 이 값은 연산에 영향을 미친다

word : 디지털 시스템에서 한 번 연산할 때 처리할 수 있는 연산단위 ex) 32비트 컴퓨터는 32비트가 word의 단위이다.
8진수를 3비트 단위로 끊어서 표현하면 2진수로 변환할 수 있다.
 마찬가지로 16진수를 4비트 단위로 끊어서 2진수로 표현하면 2진수로 변환할 수 있다.

음수는 msb에 0 > + 1> - 로 표현
나머지 비트는 수의 크기를 표현

* 1의 보수표현 :모든 비트 반전 ex) 9 >> -9
* 2의 보수표현 :모든 비트를 반전하고 결과값에 1을 더한다. (그 과정에서 msb로부터 올림수가 발생하면,버린다)
   0 0001001 >> 1 1110111 1의 보수에 1을 더한다.

msb 와 그 아래자리에서 올림수가 발생할 때 그 값이 다른 값을 가지면 오버플로우가 일어난다.
뺄샘의 경우 2의 보수를 취해서 덧샘으로 바꾸어서 계산한다.

20190911 수 

(3초과 코드)3증수 코드 :BCD코드에 3을 더한다(기본+3)
존슨 코드 : 5 비트로 이루어지는 비가중치 코드 >> 1의 위치로 숫자 구분 1~5 까지는 우측부터 1을 한개씩 추가
6~9 우측부터 좌측으로 1을 한개씩 뺀다.

4비트 : 니블(nibble)
밀집형 10진수(10진수의 팩 형식 표현) : 
그레이 코드 : 가중치를 가지지 않는 코드 >> 산술 연산 불가 > 아날로그 값들을 디지털 값으로 변환하는 경우 유용
>> 순서적으로 앞과뒤의 숫자에 대한 비트 표현에서 하나의 비트 표현만 다름(안정성 높음) ex) 0000> 0001 > 0011 > 0010

2진수의 그레이 코드 변환 
1. 2진수의 MSB는 그대로 그레이 코드의 최상위 비트
2. 그 후 좌측부터 우측으로 이동하면서 두 값을 더하고 그 값이 그레이 코드가 된다. ex) 1+1 =0 , 1+0 = 1, 0+0 = 0

그레이 코드의 2진수 변환
1. 그레이 코드의 최상위 비트가 2진수의 최상위 비트가 된다
2. ?

ASCII 코드 : 7비트를 이용하여 문자와 숫자 , 특수 문자를 표현하는 국제표준 코드
존(zone) 영역 : 상위 3비트 정보의 종류 지정 ex) (010)특수 문자, (011) 숫자 의미 , (100 ,101)대문자 , (110,111) 소문자 ex) 0110111 > 7

unicode(유니코드): 각 나라별 언어를 모두 표현하기 위해 나온 코드 체계

오류 검출 코드
패리티 비트(parity bit) : 오류 유/무 확인 정정은 불가능 , 전체 데이터에서 1의 갯수가 (Even)짝수, (Odd)홀수개로 만들어 알아낸다
2차원 패리티 방식 각각 추가된 패리티를 모은 값에 1의 갯수를 체크함으로써 2번 체크한다.
>> 만약 2개의 비트가 임의로 변경된 경우 알아낼 수 없다.

*해밍 코드(hamming code) : 오류 검출 및 정정 가능, 다수의 패리티 비트를 추가하는 방식
패리티 비트 수 : k , 데이터 비트 수 : d 일 때 k : 2^k-1 >= d + k ex) d=4 > k=3

오류 검출 및 정정을 위해서 신드롬 비트(syndrome bit)를 사용한다.

기타 오류 검출 코드 : 바이퀴너리 코드(1의 갯수가 2개), 2-out-of-5 코드(1의 갯수가 2개), 링카운터 코드(1의 갯수가 1개)
바이퀴너리 코드: 상위 2비트(가중치가 5,0)가 5보다 작은지 큰지 가리킴
2 out of 5 : 산술연산 불가 (가중치 없음)

20190916 월 

NAND = NOT + AND
0 + 0 > 1
0 + 1 > 1
1 + 0 > 1
1 + 1 > 0
AND 게이트와 반대 출력값을 가진다, AND 게이트에 버블을 붙여서 표현한다.
AND 게이트보다 간단하게 표현할 수 있어 연산속도 향상과 전력소모량 감소를 기대할 수 있다
만능 게이트(UNIVERSAL GATE) 라고도 부름 > 다른 게이트 구성이 가능하기 때문이다. EX) 인버터, AND 게이트, OR게이트

NOR = NOT + OR
내부회로가 OR게이트 보다 더 간단하다
만능 게이트(UNIVERSAL GATE) 라고도 부름 > 다른 게이트 구성이 가능하기 때문이다. EX) 인버터, AND 게이트, OR게이트

XOR OR게이트에 반원모양 그래픽 추가로 표현
OR 게이트에서 1 1 입력을 가질 때 0을 출력값으로 가지는 것이 특징

XNOR NOR게이트에 반원모양 그래픽 추가로 표현
두 입력이 같으면 1 다르면 0 출력
두 이진수가 같은지 검사하는 회로를 만들 수 있다.

RTL register trangsister logic
DTL 다이오드 사용
TTL 트렌지스터 사용
MOS 금속 산화물 반도체
MOSFET 
CMOS complementary MOS

인버터 기능을 하는 회로를 스위칭 회로라고 한다.

20190918 수
불 대수 연산하기

혼자 있는 인수를 묶어야 소거하기에 간편하다!

최소항 구하기
입력값 = 1 인 변수는 정상 형(normal form)으로 표현
입력값 = 0 인 변수는 보수 형(complement form)으로 표현
변수들을 곱(product)의 형태로 표현 

최대항 구하기
입력값 = 0 인 변수는 정상 형(normal form)으로 표현
입력값 = 1 인 변수는 보수 형(complement form)으로 표현
변수들을 합(sum)의 형태로 표현 

20190925 수

20191002 수
x+xy = x >x(1+y) >> x(o)
x + x` = 1 (o)
x +x`y = x+y`

4.2)라는 분배법칙임
4.3)쌍대관계 >> 역관계
4.4)

F=0 > 파이 F=1 > 시그마
4.16)(A`B`+BB`)` = (A+B)(B+B`) = A+B
4.17)X+((XY`)`Y`)` = X+((X`+Y)Y`)` = X+(X`Y`)` = X+(X+Y) = X+ Y(X)

20191007 월 카노프 맵을 이용한 부울 함수의 간략화


중간고사전 마지막 20191016

20191028 월

조합회로 분석과 설계

20191104 월
엔코더
