20190905 필기

64비트와 32비트 사이의 능력차이는 연산자리의 수가 커질 때 나타난다.
long double 은 비쥬얼스튜디오에서 8바이트지만 다른 os환경에서는 다른 값을 가진다

작은 자료형의 연산 속도가 더 빠르다
실수형은 유효숫자가 작은 float 보다 double 형을 쓰는것을 추천
실수형은 정수형보다 처리속도가 늦다
GPU 는 실수연산이 CPU 보다 특화되있고 병렬 연산이 강화되어있다

실수의 단점이 치명적이라면 정수로 변환해서 사용하는 방법을 고려해볼 수 있다

0.1 을 컴파일러에서 double 로 저장하기 때문에 float 자료형에 저장할 경우 경고 메세지가 출력된다
이는 2진수로 숫자를 저장하는 컴퓨터로 인한 문제인다 >> 실수의 특징을 이해하라

printf를 통해 반올림한 값이 출력된다고해서 그 변수의 값이 실제로 바뀌는 것이 아니다

L value == left value

20190919 필기

비쥬얼 스튜디오 f11 f10 차이 f11 함수포함 f10 함수 skip
 
프로그램이 실행될 때 진행되는 것에 동적이라는 이름을 붙이고 컴파일 될 때 진해되는 것에 정적이라는 이름을 붙인다.
정적 변수 > 전역 변수, 정적 지역 변수 
동적 변수 > 지역 변수,

레지스터 변수???

포인터 변수가 사용되고 있지 않다는 의미로 0을 넣기도 한다.

20190926 필기

int* 를 float* 에 넣으면 (포인터 연산에서 다른 자료형이 다르면 경고가 뜬다)
간접참조 *뒤에 주소값을 직접 입력할 수 있다

포인터의 자료형을 말할때는 몇 중 포인터 인지까지 말해야한다. > 의미가 모두 다르기 때문이다.
&number[0] == number == &number (자료형은 다르지만 값은 같다)
* &number[0] : 배열의 첫번째 자료접근
* number : 배열 전체에 접근
* &number : 연속된 배열이 예상될 경우에서 배열 전체에 접근

자료형 변수가 모든것을 결정한다. 
*ptr 을 ptr[0] *(ptr)+1 을 ptr[1] 로 바꿔 표현할 수 있다
 
